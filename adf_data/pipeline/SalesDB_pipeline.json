{
	"name": "SalesDB_pipeline",
	"properties": {
		"activities": [
			{
				"name": "Get SalesDBTables",
				"description": "Sales database: This database stores data for sales that happen in brick-and-mortar stores throughout the US. The sales database is a Microsoft SQL server hosted on Azure SQL.",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT QUOTENAME(table_schema)+'.'+QUOTENAME(table_name) \nAS Table_Name\nFROM \ninformation_Schema.tables \nWHERE table_name not in ('watermarktable', 'ipv6_database_firewall_rules',\n'database_firewall_rules')",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "dbsales_all",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Set Watermark",
				"description": "RETURNS: \ntable name as Item\n\nFor each table, it will perform the following operations:\n\nLook up the old watermark and set the new watermark, ingest the table from the old watermark to the new watermark, and finally, update the watermark in the control table.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get SalesDBTables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get SalesDBTables').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Lookup Old Watermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT * FROM [dbo].[watermarktable] AS WatermarkValue WHERE table_name='@{item().Table_Name}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "dbsales_all",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Lookup New Watermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT MAX(updated_at) as NewWatermarkvalue FROM @{item().Table_Name}",
										"type": "Expression"
									},
									"queryTimeout": "00:10:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "dbsales_all",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Copy Table Data",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Lookup Old Watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Lookup New Watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT * FROM @{item().Table_Name} WHERE updated_at > '@{activity('Lookup Old Watermark').output.firstRow.watermark_value}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "dbsales_all",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "watermark_update",
									"type": "DatasetReference",
									"parameters": {
										"FileExt": "csv",
										"FileTime": "@pipeline().TriggerTime"
									}
								}
							]
						},
						{
							"name": "Update Watermark",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Copy Table Data",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[usp_write_watermark]",
								"storedProcedureParameters": {
									"LastModifiedTime": {
										"value": {
											"value": "@{activity('Lookup New Watermark').output.firstRow.NewWatermarkvalue}",
											"type": "Expression"
										},
										"type": "Datetime"
									},
									"TableName": {
										"value": {
											"value": "@{activity('Lookup Old Watermark').output.firstRow.table_name}",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "salesdbsource",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}